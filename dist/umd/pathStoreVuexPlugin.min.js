!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).pathStoreVuexPlugin={},t.Vue)}(this,(function(t,e){"use strict";const r=["pop","push","reverse","shift","sort","splice","unshift"];function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function n(t){return!isNaN(t)&&!isNaN(parseFloat(t))}function s(t){return Array.isArray(t)}function i(t){for(var e,r=/([\w\s-]+)|\[([^\]]+)\]/g,o=[];e=r.exec(t||"");)"["===t[e.index]?o.push(e[2]):o.push(e[1]);return o}function u(t,e){for(var r=s(e)?e:i(e),o=r.length,n=0;n<o;n++){if(void 0===t[r[n]])return;t=t[r[n]]}return t}var f=function(t,r,u){for(var f=i(r),a=f.length,c=a-1,p=0;p<a;p++){var l=f[p];if(p!==c){var h=t[l];h&&"object"===o(h)?(h.hasOwnProperty("__ob__")||e.set(t,l,h),s(h)&&!n(f[p+1])&&e.set(t,l,{})):n(f[p+1])?e.set(t,l,[]):e.set(t,l,{})}else e.set(t,l,u);t=t[l]}},a=function(t,e,r){if("string"==typeof e)f(t,e,r);else{if(!function(t){return"object"===o(t)&&!Array.isArray(t)&&null!==t}(e))throw Error("Arguments must be either string or object.");for(var n in e)f(t,n,e[n])}},c=function(t,r){var o=i(r),n=o.pop();e.delete(u(t,o),n)};t.pathStoreVuexPlugin=t=>{const e={set(e,r){t.commit("set",{path:e,value:r})},toggle(e){t.commit("toggle",{path:e})},get:e=>e?u(t.state,e):t.state,del(e){t.commit("del",{path:e})},...r.reduce(((e,r)=>Object.assign(e,{[r]:(...e)=>{const o=e.shift();return t.commit(r,{path:o,args:e})}})),{})},o={set(t,e){const{path:r,value:o}=e;a(t,r,o)},toggle(t,e){const{path:r}=e;f(t,r,!u(t,r))},del(t,e){const{path:r}=e;!function(t,e){if("string"==typeof e)c(t,e);else{if(!s(e))throw Error("Arguments must be either string or array.");e.forEach((function(e){c(t,e)}))}}(t,r)},...r.reduce(((t,e)=>Object.assign(t,{[e]:(t,r)=>{const{path:o,args:n}=r,i=u(t,o);if(!s(i))throw Error("Argument must be an array.");return i[e](...n)}})),{})};for(const e in o){(t._mutations[e]||(t._mutations[e]=[])).push((function(r){o[e].call(t,t.state,r)}))}return Object.assign(t,e)}}));
